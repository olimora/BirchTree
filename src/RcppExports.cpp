// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// buildTree
NumericMatrix buildTree(NumericMatrix data, int BF_B, int BF_L, double threshold_T, std::string distance_metric, std::string cluster_size_metric, int memory_limit_MB, int subcluster_limit, double rebuild_size_factor, bool remove_outliers);
RcppExport SEXP _BirchTree_buildTree(SEXP dataSEXP, SEXP BF_BSEXP, SEXP BF_LSEXP, SEXP threshold_TSEXP, SEXP distance_metricSEXP, SEXP cluster_size_metricSEXP, SEXP memory_limit_MBSEXP, SEXP subcluster_limitSEXP, SEXP rebuild_size_factorSEXP, SEXP remove_outliersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type BF_B(BF_BSEXP);
    Rcpp::traits::input_parameter< int >::type BF_L(BF_LSEXP);
    Rcpp::traits::input_parameter< double >::type threshold_T(threshold_TSEXP);
    Rcpp::traits::input_parameter< std::string >::type distance_metric(distance_metricSEXP);
    Rcpp::traits::input_parameter< std::string >::type cluster_size_metric(cluster_size_metricSEXP);
    Rcpp::traits::input_parameter< int >::type memory_limit_MB(memory_limit_MBSEXP);
    Rcpp::traits::input_parameter< int >::type subcluster_limit(subcluster_limitSEXP);
    Rcpp::traits::input_parameter< double >::type rebuild_size_factor(rebuild_size_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type remove_outliers(remove_outliersSEXP);
    rcpp_result_gen = Rcpp::wrap(buildTree(data, BF_B, BF_L, threshold_T, distance_metric, cluster_size_metric, memory_limit_MB, subcluster_limit, rebuild_size_factor, remove_outliers));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BirchTree_buildTree", (DL_FUNC) &_BirchTree_buildTree, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_BirchTree(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
